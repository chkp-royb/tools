#!/bin/bash

while getopts ":p" arg; do
    case $arg in
        p) prevent=1;;
    esac
done

echo "open-appsec for Kubernetes installer v0.21:"
echo "+ Downloading packages..."
wget -q https://github.com/CheckPointSW/Infinity-Next/raw/main/deployments/cp-k8s-appsec-nginx-ingress-4.1.4.tgz -O cp-k8s-appsec-nginx-ingress-4.1.4.tgz 2>&1 >/dev/null

wget -q https://github.com/openappsec/tools/raw/main/tools.tgz 2>&1 >/dev/null

tar xvfz tools.tgz 2>&1 >/dev/null

echo "+ Installing Helm Chart... about 20 seconds..."
helm install cp-k8s-appsec-nginx-ingress-4.1.4.tgz --name-template cp-appsec -n appsec --create-namespace --set appsec.mode=stand-alone  --set appsec.persistence.enabled=false --set controller.ingressClassResource.name="appsec-nginx" --set controller.ingressClassResource.controllerValue="k8s.io/appsec-nginx" 2>&1 >/dev/null

echo "+ Kubernetes loading the new ingress on all nodes... about 40 seconds..."
sleep 50 2>&1 >/dev/null

echo "+ Applying configuration..."
./k8s-read-ingress -n webapp -i webapp > protected-ingress.yaml

sed -i 's/name: webapp/name: appsec-webapp/g' protected-ingress.yaml
sed -i 's/ingressClassName: nginx/ingressClassName: appsec-nginx/g' protected-ingress.yaml
sed -i 's/annotations:/&\n    openappsec.io\/policy: default-best-practice-policy-prevent/' protected-ingress.yaml

kubectl apply -f protected-ingress.yaml 2>&1 >/dev/null

echo "Installation completed successfully!"

echo ""

echo "To validate you can run: kubectl get pods -n appsec "
